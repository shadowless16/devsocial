{"file":"C:\\Users\\akdav\\Downloads\\devsocial\\middleware\\auth.ts","mappings":";;;;;;;;;;;;;;AAWA,wCAeC;AA1BD,wCAAuD;AACvD,gEAA8B;AAU9B,SAAsB,cAAc,CAAC,OAAoB;;QACvD,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAA;QAEvD,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;YACrD,OAAO,qBAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAA;QACtE,CAAC;QAED,MAAM,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QAErC,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,aAAa,CAAQ,CAAA;YACjF,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAA;QAC1B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,qBAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAA;QACvE,CAAC;IACH,CAAC;CAAA","names":[],"sources":["C:\\Users\\akdav\\Downloads\\devsocial\\middleware\\auth.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport jwt from 'jsonwebtoken'\n\nexport interface AuthenticatedRequest extends NextRequest {\n  user?: {\n    id: string\n    email: string\n    username: string\n  }\n}\n\nexport async function authMiddleware(request: NextRequest) {\n  const authHeader = request.headers.get('authorization')\n  \n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\n    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\n  }\n\n  const token = authHeader.substring(7)\n  \n  try {\n    const decoded = jwt.verify(token, process.env.JWT_SECRET || 'test-secret') as any\n    return { user: decoded }\n  } catch (error) {\n    return NextResponse.json({ error: 'Invalid token' }, { status: 401 })\n  }\n}"],"version":3}