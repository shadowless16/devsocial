{"file":"C:\\Users\\akdav\\Downloads\\devsocial\\utils\\avatar-generator.ts","mappings":";;AAQA,kEAiBC;AAGD,wCAEC;AAGD,oDAGC;AAGD,gEAEC;AAGD,oDAEC;AAvCD,sCAAsC;AACtC,SAAgB,2BAA2B,CAAC,UAAyB,EAAE;IACrE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,GAAG,QAAQ,EAAE,GAAG,OAAO,CAAC;IAEnD,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACvD,MAAM,UAAU,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACxE,MAAM,SAAS,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IACrD,MAAM,OAAO,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;IAE3D,iDAAiD;IACjD,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;IAEtG,MAAM,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACrE,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACjE,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/D,MAAM,MAAM,GAAG,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAEtE,OAAO,gHAAgH,cAAc,SAAS,IAAI,SAAS,IAAI,WAAW,MAAM,SAAS,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;AAChN,CAAC;AAED,kCAAkC;AAClC,SAAgB,cAAc,CAAC,UAAyB,EAAE;IACxD,OAAO,2BAA2B,CAAC,OAAO,CAAC,CAAC;AAC9C,CAAC;AAED,yBAAyB;AACzB,SAAgB,oBAAoB,CAAC,MAAoC;IACvE,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/D,OAAO,cAAc,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAC;AACtD,CAAC;AAED,gDAAgD;AAChD,SAAgB,0BAA0B,CAAC,QAAgB,EAAE,MAAoC;IAC/F,OAAO,cAAc,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;AACpD,CAAC;AAED,mCAAmC;AACnC,SAAgB,oBAAoB,CAAC,MAAoC;IACvE,OAAO,oBAAoB,CAAC,MAAM,CAAC,CAAC;AACtC,CAAC","names":[],"sources":["C:\\Users\\akdav\\Downloads\\devsocial\\utils\\avatar-generator.ts"],"sourcesContent":["// Avatar generation utility - Ready Player Me integration\nexport interface AvatarOptions {\n  seed?: string;\n  gender?: 'male' | 'female' | 'other';\n  style?: 'casual' | 'formal' | 'sporty' | 'creative';\n}\n\n// Generate Ready Player Me avatar URL\nexport function generateReadyPlayerMeAvatar(options: AvatarOptions = {}): string {\n  const { gender, seed, style = 'casual' } = options;\n  \n  const genders = gender ? [gender] : ['male', 'female'];\n  const hairColors = ['blonde', 'brown', 'black', 'red', 'gray', 'white'];\n  const skinTones = ['light', 'medium', 'dark', 'tan'];\n  const outfits = ['casual', 'formal', 'sporty', 'creative'];\n  \n  // Use seed for consistent generation if provided\n  const seedNum = seed ? seed.split('').reduce((a, b) => a + b.charCodeAt(0), 0) : Math.random() * 1000;\n  \n  const selectedGender = genders[Math.floor(seedNum % genders.length)];\n  const hair = hairColors[Math.floor(seedNum % hairColors.length)];\n  const skin = skinTones[Math.floor(seedNum % skinTones.length)];\n  const outfit = style || outfits[Math.floor(seedNum % outfits.length)];\n  \n  return `https://models.readyplayer.me/64bfa75f0e72c63d7c3934a6.glb?morphTargets=ARKit&textureAtlas=1024&lod=1&gender=${selectedGender}&hair=${hair}&skin=${skin}&outfit=${outfit}&seed=${seed || Date.now()}`;\n}\n\n// Main avatar generation function\nexport function generateAvatar(options: AvatarOptions = {}): string {\n  return generateReadyPlayerMeAvatar(options);\n}\n\n// Generate random avatar\nexport function generateRandomAvatar(gender?: 'male' | 'female' | 'other'): string {\n  const randomSeed = Math.random().toString(36).substring(2, 15);\n  return generateAvatar({ seed: randomSeed, gender });\n}\n\n// Generate avatar from username for consistency\nexport function generateAvatarFromUsername(username: string, gender?: 'male' | 'female' | 'other'): string {\n  return generateAvatar({ seed: username, gender });\n}\n\n// Alias for backward compatibility\nexport function generateGenderAvatar(gender?: 'male' | 'female' | 'other'): string {\n  return generateRandomAvatar(gender);\n}"],"version":3}