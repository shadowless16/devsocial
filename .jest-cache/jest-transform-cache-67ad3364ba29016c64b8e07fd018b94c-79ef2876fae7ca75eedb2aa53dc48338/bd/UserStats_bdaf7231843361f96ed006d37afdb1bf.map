{"file":"C:\\Users\\akdav\\Downloads\\devsocial\\models\\UserStats.ts","mappings":"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","names":[],"sources":["C:\\Users\\akdav\\Downloads\\devsocial\\models\\UserStats.ts"],"sourcesContent":["import mongoose, { Schema, type Document } from \"mongoose\"\n\nexport interface IUserStats extends Document {\n  user: mongoose.Types.ObjectId\n\n  // XP and Level\n  totalXP: number\n  currentLevel: number\n  currentRank: string\n\n  // Content Stats\n  postsCount: number\n  totalPosts: number  // Alternative field name used in some places\n  commentsCount: number\n  likesReceived: number\n  likesGiven: number\n  \n  // Referral Stats\n  totalReferrals: number\n  \n  // Activity tracking\n  lastActiveAt: Date\n\n  // Engagement Stats\n  maxPostLikes: number\n  helpfulSolutions: number\n  bugsReported: number\n\n  // Streak Stats\n  loginStreak: number\n  lastLoginDate: Date\n  longestStreak: number\n\n  // Achievement Stats\n  badgesEarned: string[]\n  challengesCompleted: number\n  mentorshipSessions: number\n\n  // Weekly/Monthly Stats\n  weeklyXP: number\n  monthlyXP: number\n  weeklyRank: number\n  monthlyRank: number\n\n  // Timestamps\n  createdAt: Date\n  updatedAt: Date\n}\n\nconst UserStatsSchema = new Schema<IUserStats>(\n  {\n    user: {\n      type: Schema.Types.ObjectId,\n      ref: \"User\",\n      required: true,\n      unique: true,\n      index: true,\n    },\n\n    // XP and Level\n    totalXP: {\n      type: Number,\n      default: 0,\n      index: true,\n    },\n    currentLevel: {\n      type: Number,\n      default: 1,\n    },\n    currentRank: {\n      type: String,\n      default: \"tech_jjc\",\n    },\n\n    // Content Stats\n    postsCount: {\n      type: Number,\n      default: 0,\n    },\n    totalPosts: {\n      type: Number,\n      default: 0,\n    },\n    commentsCount: {\n      type: Number,\n      default: 0,\n    },\n    likesReceived: {\n      type: Number,\n      default: 0,\n    },\n    likesGiven: {\n      type: Number,\n      default: 0,\n    },\n    \n    // Referral Stats\n    totalReferrals: {\n      type: Number,\n      default: 0,\n    },\n    \n    // Activity tracking\n    lastActiveAt: {\n      type: Date,\n      default: Date.now,\n    },\n\n    // Engagement Stats\n    maxPostLikes: {\n      type: Number,\n      default: 0,\n    },\n    helpfulSolutions: {\n      type: Number,\n      default: 0,\n    },\n    bugsReported: {\n      type: Number,\n      default: 0,\n    },\n\n    // Streak Stats\n    loginStreak: {\n      type: Number,\n      default: 0,\n    },\n    lastLoginDate: {\n      type: Date,\n    },\n    longestStreak: {\n      type: Number,\n      default: 0,\n    },\n\n    // Achievement Stats\n    badgesEarned: [\n      {\n        type: String,\n      },\n    ],\n    challengesCompleted: {\n      type: Number,\n      default: 0,\n    },\n    mentorshipSessions: {\n      type: Number,\n      default: 0,\n    },\n\n    // Weekly/Monthly Stats\n    weeklyXP: {\n      type: Number,\n      default: 0,\n    },\n    monthlyXP: {\n      type: Number,\n      default: 0,\n    },\n    weeklyRank: {\n      type: Number,\n      default: 0,\n    },\n    monthlyRank: {\n      type: Number,\n      default: 0,\n    },\n  },\n  {\n    timestamps: true,\n  },\n)\n\n// Indexes for leaderboard queries\nUserStatsSchema.index({ totalXP: -1 })\nUserStatsSchema.index({ weeklyXP: -1 })\nUserStatsSchema.index({ monthlyXP: -1 })\nUserStatsSchema.index({ currentLevel: -1 })\n\nexport default mongoose.models.UserStats || mongoose.model<IUserStats>(\"UserStats\", UserStatsSchema)\n"],"version":3}