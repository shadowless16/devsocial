{"file":"C:\\Users\\akdav\\Downloads\\devsocial\\utils\\validation.ts","mappings":"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","names":[],"sources":["C:\\Users\\akdav\\Downloads\\devsocial\\utils\\validation.ts"],"sourcesContent":["import { z } from \"zod\"\n\n// Auth validation schemas\nexport const signupSchema = z.object({\n  username: z\n    .string()\n    .min(3, \"Username must be at least 3 characters\")\n    .max(30, \"Username must be less than 30 characters\")\n    .regex(/^[a-zA-Z0-9_]+$/, \"Username can only contain letters, numbers, and underscores\"),\n  email: z.string().email(\"Invalid email address\"),\n  password: z\n    .string()\n    .min(8, \"Password must be at least 8 characters\")\n    .regex(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n      \"Password must contain at least one uppercase letter, one lowercase letter, and one number\",\n    ),\n  firstName: z.string().min(1, \"First name is required\").max(50, \"First name must be less than 50 characters\"),\n  lastName: z.string().min(1, \"Last name is required\").max(50, \"Last name must be less than 50 characters\"),\n  birthMonth: z.number().min(1).max(12),\n  birthDay: z.number().min(1).max(31),\n  // Accept any string for affiliation to accommodate the large dynamic list\n  affiliation: z.string().max(100).optional(),\n})\n\nexport const loginSchema = z.object({\n  usernameOrEmail: z.string().min(1, \"Username or email is required\"),\n  password: z.string().min(1, \"Password is required\"),\n})\n\n// Post validation schemas\nexport const createPostSchema = z.object({\n  content: z.string().min(1, \"Content is required\").max(2000, \"Content must be less than 2000 characters\"),\n  isAnonymous: z.boolean().optional().default(false),\n  imageUrl: z.string().url().optional().nullable(),\n  tags: z.array(z.string().max(50)).max(5, \"Maximum 5 tags allowed\").optional().default([]),\n})\n\n// Comment validation schemas\nexport const createCommentSchema = z.object({\n  content: z.string().min(1, \"Content is required\").max(500, \"Content must be less than 500 characters\"),\n})\n\n// User profile validation schemas\nexport const updateProfileSchema = z.object({\n  bio: z.string().max(250, \"Bio must be less than 250 characters\").optional(),\n  // Allow any string for affiliation here as well\n  affiliation: z.string().max(100).optional(),\n  avatar: z.string().url().optional(),\n})\n\n// Report validation schemas\nexport const createReportSchema = z.object({\n  reportedItemType: z.enum([\"post\", \"comment\"]),\n  reportedItemId: z.string().min(1, \"Reported item ID is required\"),\n  reason: z.string().min(1, \"Reason is required\").max(500, \"Reason must be less than 500 characters\"),\n})\n"],"version":3}