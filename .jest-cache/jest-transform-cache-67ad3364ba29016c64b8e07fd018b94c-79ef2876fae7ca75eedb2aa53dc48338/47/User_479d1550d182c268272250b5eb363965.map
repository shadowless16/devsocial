{"file":"C:\\Users\\akdav\\Downloads\\devsocial\\models\\User.ts","mappings":"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","names":[],"sources":["C:\\Users\\akdav\\Downloads\\devsocial\\models\\User.ts"],"sourcesContent":["// models/User.ts\nimport mongoose, { Schema, Document, models, model } from \"mongoose\";\n\n// Your existing, detailed interface\nexport interface IUser extends Document {\n  username: string;\n  email: string;\n  password: string;\n  firstName?: string;\n  lastName?: string;\n  birthMonth?: number;\n  birthDay?: number;\n  bio: string;\n  affiliation: string;\n  avatar: string;\n  bannerUrl: string;\n  role: \"user\" | \"moderator\" | \"admin\" | \"analytics\";\n  gender?: \"male\" | \"female\" | \"other\";\n  userType?: \"student\" | \"developer\" | \"designer\" | \"entrepreneur\" | \"other\";\n  techCareerPath?: string;\n  techStack?: string[];\n  experienceLevel?: \"beginner\" | \"intermediate\" | \"advanced\" | \"expert\";\n  githubUsername?: string;\n  linkedinUrl?: string;\n  portfolioUrl?: string;\n  points: number;\n  badges: string[];\n  level: number;\n  isVerified: boolean;\n  displayName?: string;\n  location?: string;\n  website?: string;\n  verificationToken?: string;\n  verificationTokenExpires?: Date;\n  resetPasswordToken?: string;\n  resetPasswordExpires?: Date;\n  refreshTokens: string[];\n  lastLogin?: Date;\n  loginStreak: number;\n  lastStreakDate?: Date;\n  referralCode?: string;\n  onboardingCompleted: boolean;\n  followersCount: number;\n  followingCount: number;\n  lastActive?: Date;\n  sessionStart?: Date;\n  registrationSource?: string;\n  referrer?: string;\n  country?: string;\n  isGenerated?: boolean;\n  hederaAccountId?: string;\n  walletConnected?: boolean;\n  demoWalletBalance: number;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst UserSchema = new Schema<IUser>(\n  {\n    username: {\n      type: String,\n      required: true,\n      unique: true,\n      trim: true,\n      minlength: 3,\n      maxlength: 30,\n      index: true,\n    },\n    email: {\n      type: String,\n      required: true,\n      unique: true,\n      lowercase: true,\n      trim: true,\n      index: true,\n    },\n    password: {\n      type: String,\n      required: true,\n      // You might want to add select: false here to hide it from queries\n      // select: false, \n    },\n    firstName: {\n      type: String,\n      trim: true,\n      maxlength: 50,\n    },\n    lastName: {\n      type: String,\n      trim: true,\n      maxlength: 50,\n    },\n    birthMonth: {\n      type: Number,\n      min: 1,\n      max: 12,\n    },\n    birthDay: {\n      type: Number,\n      min: 1,\n      max: 31,\n    },\n    bio: {\n      type: String,\n      maxlength: 250,\n      default: \"\",\n    },\n    affiliation: {\n      type: String,\n      maxlength: 100,\n      default: \"Other\",\n    },\n    techCareerPath: {\n      type: String,\n      enum: [\"Frontend Developer\", \"Backend Developer\", \"Full Stack Developer\", \"Mobile Developer\", \"DevOps Engineer\", \"Data Scientist\", \"ML Engineer\", \"Cloud Architect\", \"Security Engineer\", \"UI/UX Designer\", \"Other\"],\n    },\n    techStack: [{\n      type: String,\n      trim: true,\n    }],\n    experienceLevel: {\n      type: String,\n      enum: [\"beginner\", \"intermediate\", \"advanced\", \"expert\"],\n      default: \"beginner\",\n    },\n    githubUsername: {\n      type: String,\n      trim: true,\n    },\n    linkedinUrl: {\n      type: String,\n      trim: true,\n    },\n    portfolioUrl: {\n      type: String,\n      trim: true,\n    },\n    avatar: {\n      type: String,\n      default: \"\", // We set default to empty string so the pre-save hook can catch it\n    },\n    gender: {\n      type: String,\n      enum: [\"male\", \"female\", \"other\"],\n    },\n    userType: {\n      type: String,\n      enum: [\"student\", \"developer\", \"designer\", \"entrepreneur\", \"other\"],\n    },\n    bannerUrl: {\n      type: String,\n      default: \"\", // New field for user banner\n    },\n    role: {\n      type: String,\n      enum: [\"user\", \"moderator\", \"admin\", \"analytics\"],\n      default: \"user\",\n    },\n    points: {\n      type: Number,\n      default: 10, // Your default is 10, which is great!\n      index: true,\n    },\n    badges: [{ type: String }],\n    level: { type: Number, default: 1 },\n    displayName: { type: String, trim: true },\n    location: { type: String, trim: true },\n    website: { type: String, trim: true },\n    isVerified: { type: Boolean, default: false },\n    verificationToken: { type: String, default: null },\n    verificationTokenExpires: { type: Date, default: null },\n    resetPasswordToken: { type: String, default: null },\n    resetPasswordExpires: { type: Date, default: null },\n    refreshTokens: [{ type: String }],\n    lastLogin: { type: Date },\n    loginStreak: { type: Number, default: 0 },\n    lastStreakDate: { type: Date },\n    referralCode: { \n      type: String, \n      unique: true, \n      sparse: true,\n      index: true,\n    },\n    onboardingCompleted: {\n      type: Boolean,\n      default: false,\n      index: true,\n    },\n    followersCount: {\n      type: Number,\n      default: 0,\n      index: true,\n    },\n    followingCount: {\n      type: Number,\n      default: 0,\n      index: true,\n    },\n    lastActive: {\n      type: Date,\n      default: Date.now,\n      index: true,\n    },\n    sessionStart: {\n      type: Date,\n      default: Date.now,\n    },\n    registrationSource: {\n      type: String,\n      enum: ['organic', 'referral', 'social', 'direct', 'email', 'search'],\n      default: 'direct'\n    },\n    referrer: {\n      type: String,\n      default: ''\n    },\n    country: {\n      type: String,\n      trim: true,\n    },\n    isGenerated: {\n      type: Boolean,\n      default: false,\n      index: true,\n    },\n    hederaAccountId: {\n      type: String,\n      trim: true,\n      sparse: true,\n      index: true,\n    },\n    walletConnected: {\n      type: Boolean,\n      default: false,\n    },\n    demoWalletBalance: {\n      type: Number,\n      default: 100, // Each user starts with 100 demo HBAR\n      min: 0,\n      index: true,\n    },\n  },\n  { timestamps: true }\n);\n\n// --- START: COMBINED MIDDLEWARE ---\n\nUserSchema.pre(\"save\", function (next) {\n  // 1. Level calculation logic\n  if (this.isModified(\"points\")) {\n    this.level = Math.floor(this.points / 1000) + 1;\n  }\n\n  // 2. Generate avatar for new users (will be overridden during onboarding)\n  if (this.isNew && !this.avatar) {\n    const seed = this.username;\n    if (this.gender === \"male\") {\n      this.avatar = `https://models.readyplayer.me/64bfa75f0e72c63d7c3934a6.glb?morphTargets=ARKit&textureAtlas=1024&lod=1&gender=male&seed=${seed}`;\n    } else if (this.gender === \"female\") {\n      this.avatar = `https://models.readyplayer.me/64bfa75f0e72c63d7c3934a6.glb?morphTargets=ARKit&textureAtlas=1024&lod=1&gender=female&seed=${seed}`;\n    } else {\n      this.avatar = `https://models.readyplayer.me/64bfa75f0e72c63d7c3934a6.glb?morphTargets=ARKit&textureAtlas=1024&lod=1&seed=${seed}`;\n    }\n  }\n\n  // 3. Generate referral code for new users\n  if (this.isNew && !this.referralCode) {\n    const timestamp = Date.now().toString(36);\n    const username = this.username.substring(0, 4).toUpperCase();\n    const random = Math.random().toString(36).substring(2, 6).toUpperCase();\n    this.referralCode = `${username}${timestamp}${random}`;\n  }\n\n  next();\n});\n\n// --- END: COMBINED MIDDLEWARE ---\n\n\n// Your existing methods\nUserSchema.methods.calculateLevel = function () {\n  return Math.floor(this.points / 1000) + 1;\n};\n\nUserSchema.methods.cleanExpiredTokens = function () {\n  // ... (your existing logic is perfect)\n};\n\nexport default models.User || model<IUser>(\"User\", UserSchema);"],"version":3}