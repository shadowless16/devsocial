{"file":"C:\\Users\\akdav\\Downloads\\devsocial\\lib\\session-cache.ts","mappings":";;;;;;AAAA,4DAAkC;AAElC,0CAA0C;AAC1C,MAAM,YAAY,GAAG,IAAI,oBAAS,CAAC;IACjC,MAAM,EAAE,GAAG,EAAE,YAAY;IACzB,WAAW,EAAE,EAAE,EAAE,sCAAsC;IACvD,SAAS,EAAE,KAAK,CAAC,qBAAqB;CACvC,CAAC,CAAA;AAYF,MAAa,mBAAmB;IAG9B,MAAM,CAAC,GAAG,CAAC,SAAiB;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAgB,SAAS,CAAC,IAAI,IAAI,CAAA;IACzD,CAAC;IAED,MAAM,CAAC,GAAG,CAAC,SAAiB,EAAE,OAAsB;QAClD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAA;IACpC,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,SAAiB;QAC7B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;IAC3B,CAAC;IAED,MAAM,CAAC,KAAK;QACV,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA;IACvB,CAAC;IAED,MAAM,CAAC,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA;IAC9B,CAAC;;AArBH,kDAsBC;AArBgB,yBAAK,GAAG,YAAY,CAAA","names":[],"sources":["C:\\Users\\akdav\\Downloads\\devsocial\\lib\\session-cache.ts"],"sourcesContent":["import NodeCache from 'node-cache'\n\n// Create cache instance with 5 minute TTL\nconst sessionCache = new NodeCache({ \n  stdTTL: 300, // 5 minutes\n  checkperiod: 60, // Check for expired keys every minute\n  useClones: false // Better performance\n})\n\nexport interface CachedSession {\n  user: {\n    id: string\n    username: string\n    email: string\n    role: string\n  }\n  expires: string\n}\n\nexport class SessionCacheService {\n  private static cache = sessionCache\n\n  static get(sessionId: string): CachedSession | null {\n    return this.cache.get<CachedSession>(sessionId) || null\n  }\n\n  static set(sessionId: string, session: CachedSession): void {\n    this.cache.set(sessionId, session)\n  }\n\n  static delete(sessionId: string): void {\n    this.cache.del(sessionId)\n  }\n\n  static clear(): void {\n    this.cache.flushAll()\n  }\n\n  static getStats() {\n    return this.cache.getStats()\n  }\n}"],"version":3}