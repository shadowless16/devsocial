import { test, expect } from '@playwright/test'

test.describe('Poll E2E Scenarios', () => {
  test.beforeEach(async ({ page }) => {
    await page.goto('http://localhost:3000')
    await page.click('text=Login')
    await page.fill('input[name="email"]', 'test@example.com')
    await page.fill('input[name="password"]', 'password123')
    await page.click('button[type="submit"]')
    await page.waitForURL('**/home')
  })

  test('creates and votes on poll', async ({ page }) => {
    await page.click('button:has-text("Create Post")')
    await page.click('button:has-text("Poll")')
    await page.fill('input[placeholder*="Ask a question"]', 'What is your favorite framework?')
    await page.fill('input[placeholder="Option 1"]', 'React')
    await page.fill('input[placeholder="Option 2"]', 'Vue')
    await page.click('button:has-text("Add Option")')
    await page.fill('input[placeholder="Option 3"]', 'Angular')
    await page.click('button:has-text("Create Poll")')
    await page.fill('textarea[placeholder*="What\'s on your mind"]', 'Quick poll!')
    await page.click('button:has-text("Post")')
    await page.waitForSelector('text=What is your favorite framework?')
    await page.click('button:has-text("React")')
    await page.click('button:has-text("Vote")')
    await expect(page.locator('text=/\\d+%/')).toBeVisible()
    await expect(page.locator('text=/You voted for: React/i')).toBeVisible()
  })

  test('creates multiple choice poll', async ({ page }) => {
    await page.click('button:has-text("Create Post")')
    await page.click('button:has-text("Poll")')
    await page.fill('input[placeholder*="Ask a question"]', 'Which features do you want?')
    await page.fill('input[placeholder="Option 1"]', 'Dark mode')
    await page.fill('input[placeholder="Option 2"]', 'Mobile app')
    await page.click('button:has-text("Add Option")')
    await page.fill('input[placeholder="Option 3"]', 'Video posts')
    await page.click('button:has-text("Show Settings")')
    await page.click('label:has-text("Multiple Choice")')
    await page.click('button:has-text("Create Poll")')
    await page.fill('textarea[placeholder*="What\'s on your mind"]', 'Feature poll')
    await page.click('button:has-text("Post")')
    await page.waitForSelector('text=Which features do you want?')
    await page.click('button:has-text("Dark mode")')
    await page.click('button:has-text("Mobile app")')
    await expect(page.locator('button:has-text("Vote (2/2)")')).toBeVisible()
    await page.click('button:has-text("Vote")')
    await expect(page.locator('text=/You voted for:/i')).toBeVisible()
  })

  test('prevents duplicate voting', async ({ page }) => {
    await page.goto('http://localhost:3000/home')
    const firstPoll = page.locator('[data-testid="poll"]').first()
    await firstPoll.locator('button').first().click()
    await firstPoll.locator('button:has-text("Vote")').click()
    await expect(firstPoll.locator('button:has-text("Vote")')).not.toBeVisible()
    await expect(firstPoll.locator('text=/You voted for:/i')).toBeVisible()
  })
})
